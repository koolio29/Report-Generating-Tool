import agate

def simplify_agate_table(exam_table):
    """
    simplifies the exam results in the default agate Table generated by the 
    function "get_exam_agate_table" so that the statistics generation can be 
    simplified

    Parameters
    ----------
    exam_table : agate.Table
        Exam table which needs to be simplified

    Returns
    -------
    agate.Table
        An agate.Table which contains the exam results in a simplified format
    """

    column_names = [
        "username", 
        "last_name", 
        "first_name", 
        "question_id",
        "question_type",
        "question",
        "answer",
        "max_marks", 
        "marks"
    ]

    column_types = [
        agate.Text(), 
        agate.Text(), 
        agate.Text(),             
        agate.Number(),
        agate.Text(), 
        agate.Text(),
        agate.Text(),
        agate.Number(), 
        agate.Number()
    ]

    rows = []
    for row in exam_table:
        rows.append((
            row["Username"],
            row["Last Name"],
            row["First Name"],
            row["Question ID"].split(" ")[-1],
            "Auto" if row["Auto Score"] is not None else "Manual",
            row["Question"],
            row["Answer"],
            row["Possible Points"],
            row["Auto Score"] if row["Auto Score"] is not None else \
                row["Manual Score"]
        ))
    
    return agate.Table(rows, column_names, column_types)

def get_exam_agate_table(csv_name, file_encoding="utf-8"):
    """
    Creates an Agate Table for the exam results available in the given csv file

    Parameters
    ----------
    csv_name : str
        Name of the csv file to used

    Returns
    -------
    agate.Table
        An agate Table containing all the rows from the csv file
    """

    # Overriding the default types guessed by agate
    type_tester = agate.TypeTester(force={
        "Username" : agate.Text(),
        "Last Name" : agate.Text(),
        "First Name" : agate.Text(),
        "Question ID" : agate.Text(),
        "Question" : agate.Text(),
        "Possible Points" : agate.Text(),
        "Answer" : agate.Text(),
        "Auto Score" : agate.Number(),
        "Manual Score" : agate.Number()
    })

    return agate.Table.from_csv(csv_name, column_types=type_tester, 
                                                    encoding=file_encoding)